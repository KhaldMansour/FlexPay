name: PHP CI with PHPUnit

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
      ACTIONS_RUNNER_DEBUG: true

    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: flexpay
        ports:
          - 3306:3306
        volumes:
          - dbdata:/var/lib/mysql

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2
            # Create .env file
      - name: Create .env file
        run: |
          echo "DB_HOST=localhost" > .env
          echo "DB_PORT=3306" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env
          echo "DB_DATABASE=flexpay" >> .env

      # Set up Docker Buildx (for Docker multi-platform builds, if necessary)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Install Docker Compose manually
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify Docker Compose installation

      # Build and start containers with Docker Compose
      - name: Build and start containers with verbose output
        run: |
          docker-compose -f docker-compose.yaml up -d --build --force-recreate --remove-orphans  

      # Show Docker Compose logs for the web service
      - name: Show Docker Compose logs for web
        run: |
          sudo docker-compose logs web

      # Wait for DB to be ready
      - name: Wait for DB to be ready
        run: |
          sudo docker-compose exec db bash -c 'until mysqladmin ping -h"localhost" --silent; do echo "Waiting for database"; sleep 5; done;'

      # Run PHPUnit tests
      - name: Run PHPUnit tests
        run: |
          sudo docker-compose exec web vendor/bin/phpunit --configuration phpunit.xml --debug 

      # Tear down containers
      - name: Shut down containers
        run: |
          sudo docker-compose down
